username="user"
userpass="user"
adminname="admin"
adminpass="admin"

    sudo service nodered stop  
    cd /home/pi/.node-red/
    rm settings.js
    sudo service nodered start
    while [ ! -f settings.js ] ; do echo "waiting..."; sudo sleep 1 ; done ; sudo service nodered stop;
    echo " "
    bcryptadminpass=$(node -e "console.log(require('bcryptjs').hashSync(process.argv[1], 8));" $adminpass)
    bcryptuserpass=$(node -e "console.log(require('bcryptjs').hashSync(process.argv[1], 8));" $userpass)
    # echo Encrypted password: $bcryptpass
    cp settings.js settings.js.bak-pre-crypt
    sudo sed -i -e 's#functionGlobalContext: {#\/\/ functionGlobalContext: {#g' settings.js
    sudo sed -i -e 's#\s\s\s\s\},#    \/\/ },#g' settings.js
    sudo sed -i -e 's#^\}#,#g' settings.js
    sudo echo " " > tmpfile
    sudo echo "    httpStatic: '/home/pi/.node-red/public'," >> tmpfile
    sudo echo "    functionGlobalContext: {" >> tmpfile
    sudo echo "        os:require('os')," >> tmpfile
    sudo echo "        moment:require('moment'), " >> tmpfile
    sudo echo "        fs:require('fs')" >> tmpfile
    sudo echo "    }," >> tmpfile
    sudo echo " " >> tmpfile
    sudo echo "    adminAuth: {" >> tmpfile
    sudo echo "        type: \"credentials\"," >> tmpfile
    sudo echo "        users: [{" >> tmpfile
    sudo echo "            username: \"$adminname\"," >> tmpfile
    sudo echo "            password: \"$bcryptadminpass\"," >> tmpfile
    sudo echo "            permissions: \"*\"" >> tmpfile
    sudo echo "        }]" >> tmpfile
    sudo echo "    }," >> tmpfile
    sudo echo " " >> tmpfile
    sudo echo "    httpNodeAuth: {user:\"$username\", pass:\"$bcryptuserpass\"}" >> tmpfile
    sudo echo "}" >> tmpfile
    sudo cat tmpfile >> settings.js
    sudo rm -f tmpfile
